# core

- [x] abstract all storage behind a Trait with sqlite in mind
- [x] move storage to sqlite for cli
- [x] ensure there is no (type, name) duplicate
- [x] extend sqlite functional tests
- [ ] block options
- [ ] if/end block
- [ ] while block

## api

- [x] sqlite locally behind Trait
- [x] API implementation
  - [x] run create (run object is written to DB at creation)
  - [x] run status (updated in DB as we make progress)
  - [x] incremental run ceation in DB
  - [x] APIState pointers to runs in progress
- [x] Postgres Store

## cli

- [x] split off cli code from core
      not fully splitted but well abstacted now (no filesystem in core code)
- [x] take type on top of name for inspect
- [ ] dust deploy (serve as an endpoint and log)
    - what is the underlying data store? run-like?
    - dust deploys list

# front

- [~] Landing
- [x] Github Login
- [~] Design + Run
- [ ] Deploy

# Go LIvE

## P0 (must-have)

- [x] block output display
- [x] work on the landing
- [x] integrate cohere in dust/core
- [x] allow read-only/unsigned access of public apps
- [x] sign-in in App top-bar when unsigned
- [x] better loading of blocks (loading message on runRequest)
- [x] rename root -> input
- [x] support menu:
  - [x] minimal documentation (README)
  - [x] discord invite
- [x] move to postgres
- [x] prod Github app with icon
- [x] minimal deployment on gcp
- [x] fix #11 #17 #18
- [x] fix map reduce
- [x] twitter card
- [x] initial demo 1 (math to code)
- [ ] google analytics
- [ ] initial demo 2 (TBD)

## P1 (rapid follow-up)

- [x] search block
- [ ] while block
- [ ] demo 2: self-ask / react
- [ ] edit/Delete app
- [ ] fork app
- [ ] copy dataset to app
- [ ] if/then block
- [ ] dataset iteration: upload, item list, save on update

## P2

- [ ] Deploy as an endpoint + capture traffic
